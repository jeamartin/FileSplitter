TODO 

- OK Extend header info the format in FileSplitterCommon.Header
- Check for code reorganization

Idées :

- Un projet de service pouvant aussi tourner comme exe résident sans sortie console pour les non admins.
Windows service. file splitter

une collection de 
	1 paramètre un répertoire réuni 
	n paramètres répertoires partiels.
	son format 

lorsqu'un fichier apparaît dans le répertoire réuni, il est splitté selon les paramètres et les parties sont écries dans les répertoires partiels
lorsqu'un fichier apparaît dans le répertoire partiels, on cherche un fichier du même nom dans les autres répertoires partiels, si on arrive à trouver assez de parties alors on recrée le fichier original (avec ofuscation du nom).

Les répertoires partiels peuvent correpondre au répertoires d'unité cloud.

- Un projet de configuration du service, qui pourrait apparaître dans la barre-système 
avec option de démarrage en même temps que windows.

- Un projet standalone 
 permet de charger de multiples fichier et de retrouver lequel va avec lequel (grace au hash)

- Un projet de test

tester toutes les méthodes sur des fichiers
- plus petit fichier
- fichier binaire petit (nombre de bytes impaire ?)
- grand fichier
- très grand fichier (optionel ?)
 
- format de fichier (comment le rendre extensible ?)

options : 
- Opt-in : identification du fichier dans chaque parties 
- Offuscer le nom des parties (Opt-out)
Il faut stocker les métadata (qui deviennent essentielles.)

candidat pour le hash : à voir si on hash. HASH algo in MEF container ? 
murmur3 https://gist.github.com/automatonic/3725443

GUID dans le nom à rajouter aussi dans le header ? 
il manquerait la quantité de part miniamle pour reconstituer le fichier.

header (intel convention) v1: see header class
